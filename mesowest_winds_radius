# Brian Blaylock
# 4 February 2016

# Get MesoWest Wind Data for all stations in a radius within a specified time
# Return the Name, Lat, Lon, WS, and WD in a dictionary

import numpy as np
import datetime
import json
import urllib2
import matplotlib.pyplot as plt

token = '1234567890' # get your own key and token from http://mesowest.org/api/
within = '15'
attime = '201506182100'



def get_mesowest_radius_winds(attime,within):
    URL = 'http://api.mesowest.net/v2/stations/nearesttime?&token='+token+'&radius=kslc,30&attime='+attime+'&within='+within+'&obtimezone=utc&units=metric&vars=wind_speed,wind_direction&varoperator=and'
        
    ##Open URL and read the content
    f = urllib2.urlopen(URL)
    data = f.read()
    
    ##Convert that json string into some python readable format
    data = json.loads(data)
    
    
    name = np.array([])
    stnid = np.array([])
    ws = np.array([])
    wd = np.array([])
    lat = np.array([])
    lon = np.array([])
    DATES = np.array([])
    
    for i in data['STATION']:
        name = np.append(name,i['NAME'])
        stnid = np.append(stnid,i['STID'])
        lat = np.append(lat,i['LATITUDE'])
        lon = np.append(lon,i['LONGITUDE'])
        try:    
            wd = np.append(wd,i['OBSERVATIONS']['wind_direction_value_1']['value'])
            date = i['OBSERVATIONS']['wind_direction_value_1']['date_time']
            converted_time = datetime.datetime.strptime(date,'%Y-%m-%dT%H:%M:%SZ')
            DATES = np.append(DATES,converted_time)
        except:
            wd =np.append(wd,np.nan)
            DATES = np.append(DATES,np.nan)
        try:    
            ws = np.append(ws,i['OBSERVATIONS']['wind_speed_value_1']['value'])
        except:
            ws = np.append(ws,np.nan)
        
    
    # Convert datatype from Unicode to String or floats
    name = name.astype(str)
    stnid = stnid.astype(str)
    lat = lat.astype(float)
    lon = lon.astype(float)
    ws = ws.astype(float)
    wd = wd.astype(float)
    
    data = {'NAME':name,'STNID':stnid,'LON':lon,'LAT':lat,'WIND_SPEED':ws,'WIND_DIR':wd}
    return data

# Wind Calculations
def wind_spddir_to_uv(wspd,wdir):
    """
    calculated the u and v wind components from wind speed and direction
    Input:
        wspd: wind speed
        wdir: wind direction
    Output:
        u: u wind component
        v: v wind component
    """    
    
    rad = 4.0*np.arctan(1)/180.
    u = -wspd*np.sin(rad*wdir)
    v = -wspd*np.cos(rad*wdir)

    return u,v
    
    

#--- Example -----------------------------------------------------------------#
if __name__ == "__main__":
    a = get_mesowest_radius_winds('201506190000','10')
    u,v = wind_spddir_to_uv(a['WIND_SPEED'],a['WIND_DIR'])
    
    plt.barbs(a['LON'],a['LAT'],u,v)
    
    
